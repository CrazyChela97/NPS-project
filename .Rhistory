newdata1 <- newdata[is.na(newdata$TotalWidth_m),]
length(newdata1$OBJECTID)
length(newdata$OBJECTID)-length(newdata1$OBJECTID)
length(data$OBJECTID)-length(newdata$OBJECTID)
View(newdata1)
newdata1 <- newdata[!is.na(newdata$TotalWidth_m),] #-2121 dati
newdata1 <- newdata[is.na(newdata$TotalWidth_m),] #-2121 dati
newdata1 <- newdata[!is.na(newdata$TotalWidth_m),] #-49894 dati!!
#### provo su tutto dataset
stati = aggregate(newdata1$Totalltems_EventRecord, by=list(Country=newdata1$CountryName_FromSource, month=newdata1$MonthNum, year=newdata1$Year), FUN=sum)
nomi_stati = levels(factor(newdata1$CountryName_FromSource)) #cosa sono gli stati "25000,42000,43000 e 92000"?
zeros = rep(0, length(nomi_stati))
stati_fda = data.frame(nomi_stati)
#dataframe stati/mesi
count = 1
for (y in 2015:2018){
for (i in 1:12){
stati_fda = cbind(stati_fda, zeros);
temp = stati[which(stati$month==i & stati$year==y), ]
index = match(temp$Country, stati_fda$nomi_stati)
stati_fda[index, count+1] = temp$x
count = count+1
}
}
names(stati_fda) =  as.character(c('Country', 1:(12*4)))
# plot functional data
matplot(t(stati_fda[ ,-1]), type='l')
data = PP_2[ , -c(1,2,4,5,6,7,9,11,23,24,25,28,29,30,35,37,38,43:83)]
# impongo unica classe USA anche per United States, va fatto per tutti i doppioni
data[which(data$CountryName_FromSource == 'United States'), ]$CountryName_FromSource = 'USA'
data[which(data$CountryName_FromSource == 'Italy'), ]$CountryName_FromSource = 'IT'
#calcolo superficie totale, TotalArea_Sq_m sono tutti NA, può essere utile
for (i in 1:length(data$OBJECTID)) {
data$TotalArea_Sq_m[i]=data$TotalWidth_m[i]*data$TotalLength_m[i]
}
newdata <- data[!is.na(data$TotalVolunteers),] #-2418 dati
newdata1 <- newdata[!is.na(newdata$TotalWidth_m),] #-49894 dati!! contiene solo 2121 dati
# prova dataset 2015 stati/mesi
dati_2015 = data[which(data$Year=="2015"), ]
### PLASTIC POLLUTION ###
library(readr)
library(roahd)
setwd("C:/Users/rozzu/OneDrive/Desktop/NPS-project")
PP_2 <- read_csv("PP_2.csv")
data = PP_2[ , -c(1,2,4,5,6,7,9,11,23,24,25,28,29,30,35,37,38,43:83)]
# impongo unica classe USA anche per United States, va fatto per tutti i doppioni
data[which(data$CountryName_FromSource == 'United States'), ]$CountryName_FromSource = 'USA'
data[which(data$CountryName_FromSource == 'Italy'), ]$CountryName_FromSource = 'IT'
#calcolo superficie totale, TotalArea_Sq_m sono tutti NA, può essere utile
for (i in 1:length(data$OBJECTID)) {
data$TotalArea_Sq_m[i]=data$TotalWidth_m[i]*data$TotalLength_m[i]
}
newdata <- data[!is.na(data$TotalVolunteers),] #-2418 dati
newdata1 <- newdata[!is.na(newdata$TotalWidth_m),] #-49894 dati!! contiene solo 2121 dati
View(newdata)
table
table(newdata)
table(newdata[1:100,])
table(newdata[1:5,])
grouping(newdata$Location)
aggregate(newdata$Location , `length)
vf
ff
aggregate(newdata$Location , `length)
aggregate(newdata$Location , length)
aggregate(newdata$Location , FUN=length)
aggregate(newdata$Location ,by=(list(newdata$Location)), FUN=length)
stati = aggregate(dati_2015$Totalltems_EventRecord, by=list(Country=dati_2015$CountryName_FromSource, month=dati_2015$MonthNum), FUN=sum)
# prova dataset 2015 stati/mesi
dati_2015 = data[which(data$Year=="2015"), ]
stati = aggregate(dati_2015$Totalltems_EventRecord, by=list(Country=dati_2015$CountryName_FromSource, month=dati_2015$MonthNum), FUN=sum)
stati
zone=aggregate(newdata$Location, by=list(zona=newdata$Location), FUN=length)
head(zone)
sum(zone$x)
length(newdata$Location)
length(newdata$OBJECTID)
legnth
length(zone$zona)
location=aggregate(newdata$Location, by=list(zona=newdata$Location), FUN=length)
length(location$zona) #3567, ci sono 3567 location, ma alcune sono NA perchè magari c'è la sigla dello
length(newdata$Location)-sum(location$x)
location
sum(location$x)
length(newdata$Location)
x=newdata[!is.na(newdata$Location),]
length(newdata$Location)
sum(location$x)
length(x$Location)-sum(location$x)
length(newdata$Location)-sum(location$x)
length(newdata$Location)-sum(location$x)
newdata[is.na(newdata$Location),]
View(location)
#stato o il nome del SubCountry
#esattamente length(newdata$Location)-sum(location$x)= 3246 NA
#alcuni hanno NA sia in location che in CountryName che in SubCountry_L1/L2 quindi li tolgo
#per ora lavoro sul newdata per poi capire che fare con quelli senza TotalWidth
newdata <- newdata[!is.na(newdata$Location)&!is.na(newdata$CountryName_FromSource)&!is.na(newdata$SubCountry_L1_FromSource)&!is.na(newdata$SubCountry_L2_FromSource),]
newdata <- data[!is.na(data$TotalVolunteers),] #-2418 dati
#stato o il nome del SubCountry
#esattamente length(newdata$Location)-sum(location$x)= 3246 NA
#alcuni hanno NA sia in location che in CountryName che in SubCountry_L1/L2 quindi li tolgo
#per ora lavoro sul newdata per poi capire che fare con quelli senza TotalWidth
newdata <- newdata[!is.na(newdata$Location)&!is.na(newdata$CountryName_FromSource)&!is.na(newdata$SubCountry_L1_FromSource)&!is.na(newdata$SubCountry_L2_FromSource),]
51970  - 46441
View(newdata)
!is.na(newdata$Location)
is.na(newdata$CountryName_FromSource)
!is.na(newdata$Location)&!is.na(newdata$CountryName_FromSource)
newdata <- data[!is.na(data$TotalVolunteers),] #-2418 dati
#stato o il nome del SubCountry
#esattamente length(newdata$Location)-sum(location$x)= 3246 NA
#alcuni hanno NA sia in location che in CountryName che in SubCountry_L1/L2 quindi li tolgo
#per ora lavoro sul newdata per poi capire che fare con quelli senza TotalWidth
newdata <- newdata[!is.na(newdata$Location)&(!is.na(newdata$CountryName_FromSource))&(!is.na(newdata$SubCountry_L1_FromSource))&(!is.na(newdata$SubCountry_L2_FromSource)),]
newdata <- data[!is.na(data$TotalVolunteers),] #-2418 dati
#stato o il nome del SubCountry
#esattamente length(newdata$Location)-sum(location$x)= 3246 NA
#alcuni hanno NA sia in location che in CountryName che in SubCountry_L1/L2 quindi li tolgo
#per ora lavoro sul newdata per poi capire che fare con quelli senza TotalWidth
newdata <- newdata[is.na(newdata$Location)&(is.na(newdata$CountryName_FromSource))&(is.na(newdata$SubCountry_L1_FromSource))&(is.na(newdata$SubCountry_L2_FromSource)),]
View(newdata)
newdata <- data[!is.na(data$TotalVolunteers),] #-2418 dati
#stato o il nome del SubCountry
#esattamente length(newdata$Location)-sum(location$x)= 3246 NA
#alcuni hanno NA sia in location che in CountryName che in SubCountry_L1/L2 quindi li tolgo
#per ora lavoro sul newdata per poi capire che fare con quelli senza TotalWidth
newdata <- newdata[!(is.na(newdata$Location)&is.na(newdata$CountryName_FromSource)&is.na(newdata$SubCountry_L1_FromSource)&is.na(newdata$SubCountry_L2_FromSource)),]
50330+1640
is.na(newdata$Location)&is.na(newdata$CountryName_FromSource)&is.na(newdata$SubCountry_L1_FromSource)&is.na(newdata$SubCountry_L2_FromSource)
View(newdata)
View(PP_2)
data = PP_2[ , -c(1,2,4,5,6,7,9,11,22,23,24,25,28,29,30,35,37,38,43:83)]
# impongo unica classe USA anche per United States, va fatto per tutti i doppioni
data[which(data$CountryName_FromSource == 'United States'), ]$CountryName_FromSource = 'USA'
data[which(data$CountryName_FromSource == 'Italy'), ]$CountryName_FromSource = 'IT'
#calcolo superficie totale, TotalArea_Sq_m sono tutti NA, può essere utile
for (i in 1:length(data$OBJECTID)) {
data$TotalArea_Sq_m[i]=data$TotalWidth_m[i]*data$TotalLength_m[i]
}
newdata <- data[!is.na(data$TotalVolunteers),] #-2418 dati
location=aggregate(newdata$Location, by=list(zona=newdata$Location), FUN=length)
length(location$zona) #3567, ci sono 3567 location, ma alcune sono NA perchè magari c'è la sigla dello
#stato o il nome del SubCountry
#esattamente length(newdata$Location)-sum(location$x)= 3246 NA
#alcuni hanno NA sia in location che in CountryName che in SubCountry_L1/L2 quindi li tolgo
#per ora lavoro sul newdata per poi capire che fare con quelli senza TotalWidth
newdata <- newdata[!(is.na(newdata$Location)&is.na(newdata$CountryName_FromSource)&is.na(newdata$SubCountry_L1_FromSource)&is.na(newdata$SubCountry_L2_FromSource)),]
#51970 prima - 50330 ora =  1640 con NA nelle quattro colonne
length(is.na(newdata$Location))
is.na(newdata$Location)
#51970 prima - 50330 ora =  1640 con NA nelle quattro colonne
length(na.omit(newdata$Location))
na.omit(newdata$Location)
#51970 prima - 50330 ora =  1640 con NA nelle quattro colonne
length(na.omit(newdata$Location))
48724+1606
length(newdata$OBJECTID)
na.omit(newdata$Location)
is.na(newdata$Location)
!is.na(newdata$Location)
is.na(newdata$Location)
is.na(newdata$Location)==TRUE
if(is.na(newdata$Location)==TRUE)
f
is.na(newdata$Location)
is.na(newdata$Location)[897]
for (i in 1:length(newdata$OBJECTID)) {
if(is.na(newdata$Location)[i]==TRUE)
if(is.na(newdata$CountryName_FromSource)[i]|is.na(newdata$SubCountry_L1_FromSource)[i]|is.na(newdata$SubCountry_L2_FromSource)[i]==FALSE)
newdata$Location[i]=paste(newdata$CountryName_FromSource[i],newdata$SubCountry_L1_FromSource[i],newdata$SubCountry_L2_FromSource[i], sep = ", ")
}
na.omit(newdata$Location)
#stato o il nome del SubCountry
#esattamente length(newdata$Location)-sum(location$x)= 3246 NA
#alcuni hanno NA sia in location che in CountryName che in SubCountry_L1/L2 quindi li tolgo
#per ora lavoro sul newdata per poi capire che fare con quelli senza TotalWidth
newdata <- newdata[!(is.na(newdata$Location)&is.na(newdata$CountryName_FromSource)&is.na(newdata$SubCountry_L1_FromSource)&is.na(newdata$SubCountry_L2_FromSource)),]
#51970 prima - 50330 ora =  1640 con NA nelle quattro colonne
length(na.omit(newdata$Location)) #1606 senza Location ma almeno uno tra CountryName, SubCountry_L1/L2
for (i in 1:length(newdata$OBJECTID)) {
if(is.na(newdata$Location)[i]==TRUE)
if(is.na(newdata$CountryName_FromSource)[i]|is.na(newdata$SubCountry_L1_FromSource)[i]|is.na(newdata$SubCountry_L2_FromSource)[i]==FALSE)
newdata$Location[i]=paste(newdata$CountryName_FromSource[i],newdata$SubCountry_L1_FromSource[i],newdata$SubCountry_L2_FromSource[i], sep = ", ")
}
#51970 prima - 50330 ora =  1640 con NA nelle quattro colonne
length(na.omit(newdata$Location)) #1606 senza Location ma almeno uno tra CountryName, SubCountry_L1/L2
for (i in 1:length(newdata$OBJECTID)) {
if(is.na(newdata$Location)[i]==TRUE)
if(is.na(newdata$CountryName_FromSource)[i]|is.na(newdata$SubCountry_L1_FromSource)[i]|is.na(newdata$SubCountry_L2_FromSource)[i]==FALSE)
newdata$Location[i]=paste(newdata$CountryName_FromSource[i],newdata$SubCountry_L1_FromSource[i],newdata$SubCountry_L2_FromSource[i], sep = ", ")
}
#51970 prima - 50330 ora =  1640 con NA nelle quattro colonne
length(na.omit(newdata$Location)) #1606 senza Location ma almeno uno tra CountryName, SubCountry_L1/L2
is.na(newdata$Location)
is.na(newdata$CountryName_FromSource)[i]|is.na(newdata$SubCountry_L1_FromSource)[i]|is.na(newdata$SubCountry_L2_FromSource)[i]
is.na(newdata$CountryName_FromSource)[40230]|is.na(newdata$SubCountry_L1_FromSource)[40230]|is.na(newdata$SubCountry_L2_FromSource)[40230]
View(newdata)
is.na(newdata$CountryName_FromSource)[34365]|is.na(newdata$SubCountry_L1_FromSource)[34365]|is.na(newdata$SubCountry_L2_FromSource)[34365]
#stato o il nome del SubCountry
#esattamente length(newdata$Location)-sum(location$x)= 3246 NA
#alcuni hanno NA sia in location che in CountryName che in SubCountry_L1/L2 quindi li tolgo
#per ora lavoro sul newdata per poi capire che fare con quelli senza TotalWidth
newdata <- newdata[!(is.na(newdata$Location)&is.na(newdata$CountryName_FromSource)&is.na(newdata$SubCountry_L1_FromSource)&is.na(newdata$SubCountry_L2_FromSource)),]
#51970 prima - 50330 ora =  1640 con NA nelle quattro colonne
length(na.omit(newdata$Location)) #1606 senza Location ma almeno uno tra CountryName, SubCountry_L1/L2
for (i in 1:length(newdata$OBJECTID)) {
if(is.na(newdata$Location)[i]==TRUE)
if((is.na(newdata$CountryName_FromSource)[i]==FALSE)|(is.na(newdata$SubCountry_L1_FromSource)[i]==FALSE)|(is.na(newdata$SubCountry_L2_FromSource)[i]==FALSE))
newdata$Location[i]=paste(newdata$CountryName_FromSource[i],newdata$SubCountry_L1_FromSource[i],newdata$SubCountry_L2_FromSource[i], sep = ", ")
}
#51970 prima - 50330 ora =  1640 con NA nelle quattro colonne
length(na.omit(newdata$Location)) #1606 senza Location ma almeno uno tra CountryName, SubCountry_L1/L2
newdata <- data[!is.na(data$TotalVolunteers),] #-2418 dati
location=aggregate(newdata$Location, by=list(zona=newdata$Location), FUN=length)
length(location$zona) #3567, ci sono 3567 location, ma alcune sono NA perchè magari c'è la sigla dello
#stato o il nome del SubCountry
#esattamente length(newdata$Location)-sum(location$x)= 3246 NA
#alcuni hanno NA sia in location che in CountryName che in SubCountry_L1/L2 quindi li tolgo
#per ora lavoro sul newdata per poi capire che fare con quelli senza TotalWidth
newdata <- newdata[!(is.na(newdata$Location)&is.na(newdata$CountryName_FromSource)&is.na(newdata$SubCountry_L1_FromSource)&is.na(newdata$SubCountry_L2_FromSource)),]
### PLASTIC POLLUTION ###
library(readr)
library(roahd)
setwd("C:/Users/rozzu/OneDrive/Desktop/NPS-project")
PP_2 <- read_csv("PP_2.csv")
data = PP_2[ , -c(1,2,4,5,6,7,9,11,22,23,24,25,28,29,30,35,37,38,43:83)]
# impongo unica classe USA anche per United States, va fatto per tutti i doppioni
data[which(data$CountryName_FromSource == 'United States'), ]$CountryName_FromSource = 'USA'
data[which(data$CountryName_FromSource == 'Italy'), ]$CountryName_FromSource = 'IT'
#calcolo superficie totale, TotalArea_Sq_m sono tutti NA, può essere utile
for (i in 1:length(data$OBJECTID)) {
data$TotalArea_Sq_m[i]=data$TotalWidth_m[i]*data$TotalLength_m[i]
}
newdata <- data[!is.na(data$TotalVolunteers),] #-2418 dati
location=aggregate(newdata$Location, by=list(zona=newdata$Location), FUN=length)
length(location$zona) #3567, ci sono 3567 location, ma alcune sono NA perchè magari c'è la sigla dello
#stato o il nome del SubCountry
#esattamente length(newdata$Location)-sum(location$x)= 3246 NA
#alcuni hanno NA sia in location che in CountryName che in SubCountry_L1/L2 quindi li tolgo
#per ora lavoro sul newdata per poi capire che fare con quelli senza TotalWidth
newdata <- newdata[!(is.na(newdata$Location)&is.na(newdata$CountryName_FromSource)&is.na(newdata$SubCountry_L1_FromSource)&is.na(newdata$SubCountry_L2_FromSource)),]
#51970 prima - 50330 ora =  1640 con NA nelle quattro colonne
length(na.omit(newdata$Location)) #1606 senza Location ma almeno uno tra CountryName, SubCountry_L1/L2
for (i in 1:length(newdata$OBJECTID)) {
if(is.na(newdata$Location)[i]==TRUE)
if((is.na(newdata$CountryName_FromSource)[i]==FALSE)|(is.na(newdata$SubCountry_L1_FromSource)[i]==FALSE)|(is.na(newdata$SubCountry_L2_FromSource)[i]==FALSE))
newdata$Location[i]=paste(newdata$CountryName_FromSource[i],newdata$SubCountry_L1_FromSource[i],newdata$SubCountry_L2_FromSource[i], sep = ", ")
}
#51970 prima - 50330 ora =  1640 con NA nelle quattro colonne
length(na.omit(newdata$Location)) #1606 senza Location ma almeno uno tra CountryName, SubCountry_L1/L2
newdata <- data[!is.na(data$TotalVolunteers),] #-2418 dati
location=aggregate(newdata$Location, by=list(zona=newdata$Location), FUN=length)
length(location$zona) #3567, ci sono 3567 location, ma alcune sono NA perchè magari c'è la sigla dello
#stato o il nome del SubCountry
#esattamente length(newdata$Location)-sum(location$x)= 3246 NA
#alcuni hanno NA sia in location che in CountryName che in SubCountry_L1/L2 quindi li tolgo
#per ora lavoro sul newdata per poi capire che fare con quelli senza TotalWidth
newdata <- newdata[!(is.na(newdata$Location)&is.na(newdata$CountryName_FromSource)&is.na(newdata$SubCountry_L1_FromSource)&is.na(newdata$SubCountry_L2_FromSource)),]
#51970 prima - 50330 ora =  1640 con NA nelle quattro colonne
length(na.omit(newdata$Location)) #1606 senza Location ma almeno uno tra CountryName, SubCountry_L1/L2
View(newdata)
47196
for (i in 1:length(newdata$OBJECTID)) {
if(is.na(newdata$Location)[i]==TRUE)
if((is.na(newdata$CountryName_FromSource)[i]==FALSE)|(is.na(newdata$SubCountry_L1_FromSource)[i]==FALSE)|(is.na(newdata$SubCountry_L2_FromSource)[i]==FALSE))
newdata$Location[i]=paste(newdata$SubCountry_L1_FromSource[i],newdata$SubCountry_L2_FromSource[i],newdata$CountryName_FromSource[i], sep = ", ")
}
#51970 prima - 50330 ora =  1640 con NA nelle quattro colonne
length(na.omit(newdata$Location)) #1606 senza Location ma almeno uno tra CountryName, SubCountry_L1/L2
#stato o il nome del SubCountry
#esattamente length(newdata$Location)-sum(location$x)= 3246 NA
#alcuni hanno NA sia in location che in CountryName che in SubCountry_L1/L2 quindi li tolgo
#per ora lavoro sul newdata per poi capire che fare con quelli senza TotalWidth
newdata <- newdata[!(is.na(newdata$Location)&is.na(newdata$CountryName_FromSource)&is.na(newdata$SubCountry_L1_FromSource)&is.na(newdata$SubCountry_L2_FromSource)),]
#51970 prima - 50330 ora =  1640 con NA nelle quattro colonne
length(na.omit(newdata$Location)) #1606 senza Location ma almeno uno tra CountryName, SubCountry_L1/L2
newdata <- data[!is.na(data$TotalVolunteers),] #-2418 dati
location=aggregate(newdata$Location, by=list(zona=newdata$Location), FUN=length)
length(location$zona) #3567, ci sono 3567 location, ma alcune sono NA perchè magari c'è la sigla dello
#stato o il nome del SubCountry
#esattamente length(newdata$Location)-sum(location$x)= 3246 NA
#alcuni hanno NA sia in location che in CountryName che in SubCountry_L1/L2 quindi li tolgo
#per ora lavoro sul newdata per poi capire che fare con quelli senza TotalWidth
newdata <- newdata[!(is.na(newdata$Location)&is.na(newdata$CountryName_FromSource)&is.na(newdata$SubCountry_L1_FromSource)&is.na(newdata$SubCountry_L2_FromSource)),]
#51970 prima - 50330 ora =  1640 con NA nelle quattro colonne
length(na.omit(newdata$Location)) #1606 senza Location ma almeno uno tra CountryName, SubCountry_L1/L2
for (i in 1:length(newdata$OBJECTID)) {
if(is.na(newdata$Location)[i]==TRUE){
if((is.na(newdata$CountryName_FromSource)[i]==FALSE)&(is.na(newdata$SubCountry_L1_FromSource)[i]==FALSE)&(is.na(newdata$SubCountry_L2_FromSource)[i]==FALSE))
newdata$Location[i]=paste(newdata$SubCountry_L1_FromSource[i],newdata$SubCountry_L2_FromSource[i],newdata$CountryName_FromSource[i], sep = ", ")
}
}
#51970 prima - 50330 ora =  1640 con NA nelle quattro colonne
length(na.omit(newdata$Location)) #1606 senza Location ma almeno uno tra CountryName, SubCountry_L1/L2
newdata <- data[!is.na(data$TotalVolunteers),] #-2418 dati
#51970 prima - 50330 ora =  1640 con NA nelle quattro colonne
length(na.omit(newdata$Location)) #1606 senza Location ma almeno uno tra CountryName, SubCountry_L1/L2
for (i in 1:length(newdata$OBJECTID)) {
if(is.na(newdata$Location)[i]==TRUE){
if((is.na(newdata$CountryName_FromSource)[i]==FALSE)&(is.na(newdata$SubCountry_L1_FromSource)[i]==FALSE)&(is.na(newdata$SubCountry_L2_FromSource)[i]==FALSE))
newdata$Location[i]=paste(newdata$SubCountry_L1_FromSource[i],newdata$SubCountry_L2_FromSource[i],newdata$CountryName_FromSource[i], sep = ", ")
if((is.na(newdata$CountryName_FromSource)[i]==FALSE)&(is.na(newdata$SubCountry_L1_FromSource)[i]==FALSE)&(is.na(newdata$SubCountry_L2_FromSource)[i]==TRUE))
newdata$Location[i]=paste(newdata$SubCountry_L1_FromSource[i],newdata$CountryName_FromSource[i], sep = ", ")
if((is.na(newdata$CountryName_FromSource)[i]==FALSE)&(is.na(newdata$SubCountry_L1_FromSource)[i]==TRUE)&(is.na(newdata$SubCountry_L2_FromSource)[i]==FALSE))
newdata$Location[i]=paste(newdata$SubCountry_L2_FromSource[i],newdata$CountryName_FromSource[i], sep = ", ")
if((is.na(newdata$CountryName_FromSource)[i]==TRUE)&(is.na(newdata$SubCountry_L1_FromSource)[i]==FALSE)&(is.na(newdata$SubCountry_L2_FromSource)[i]==FALSE))
newdata$Location[i]=paste(newdata$SubCountry_L1_FromSource[i],newdata$SubCountry_L2_FromSource[i], sep = ", ")
}
}
#51970 prima - 50330 ora =  1640 con NA nelle quattro colonne
length(na.omit(newdata$Location)) #1606 senza Location ma almeno uno tra CountryName, SubCountry_L1/L2
newdata <- data[!is.na(data$TotalVolunteers),] #-2418 dati
location=aggregate(newdata$Location, by=list(zona=newdata$Location), FUN=length)
length(location$zona) #3567, ci sono 3567 location, ma alcune sono NA perchè magari c'è la sigla dello
#stato o il nome del SubCountry
#esattamente length(newdata$Location)-sum(location$x)= 3246 NA
#alcuni hanno NA sia in location che in CountryName che in SubCountry_L1/L2 quindi li tolgo
#per ora lavoro sul newdata per poi capire che fare con quelli senza TotalWidth
newdata <- newdata[!(is.na(newdata$Location)&is.na(newdata$CountryName_FromSource)&is.na(newdata$SubCountry_L1_FromSource)&is.na(newdata$SubCountry_L2_FromSource)),]
#51970 prima - 50330 ora =  1640 con NA nelle quattro colonne
length(na.omit(newdata$Location)) #1606 senza Location ma almeno uno tra CountryName, SubCountry_L1/L2
for (i in 1:length(newdata$OBJECTID)) {
if(is.na(newdata$Location)[i]==TRUE){
if((is.na(newdata$CountryName_FromSource)[i]==FALSE)&(is.na(newdata$SubCountry_L1_FromSource)[i]==FALSE)&(is.na(newdata$SubCountry_L2_FromSource)[i]==FALSE))
newdata$Location[i]=paste(newdata$SubCountry_L1_FromSource[i],newdata$SubCountry_L2_FromSource[i],newdata$CountryName_FromSource[i], sep = ", ")
if((is.na(newdata$CountryName_FromSource)[i]==FALSE)&(is.na(newdata$SubCountry_L1_FromSource)[i]==FALSE)&(is.na(newdata$SubCountry_L2_FromSource)[i]==TRUE))
newdata$Location[i]=paste(newdata$SubCountry_L1_FromSource[i],newdata$CountryName_FromSource[i], sep = ", ")
if((is.na(newdata$CountryName_FromSource)[i]==FALSE)&(is.na(newdata$SubCountry_L1_FromSource)[i]==TRUE)&(is.na(newdata$SubCountry_L2_FromSource)[i]==FALSE))
newdata$Location[i]=paste(newdata$SubCountry_L2_FromSource[i],newdata$CountryName_FromSource[i], sep = ", ")
if((is.na(newdata$CountryName_FromSource)[i]==TRUE)&(is.na(newdata$SubCountry_L1_FromSource)[i]==FALSE)&(is.na(newdata$SubCountry_L2_FromSource)[i]==FALSE))
newdata$Location[i]=paste(newdata$SubCountry_L1_FromSource[i],newdata$SubCountry_L2_FromSource[i], sep = ", ")
}
}
#51970 prima - 50330 ora =  1640 con NA nelle quattro colonne
length(na.omit(newdata$Location)) #1606 senza Location ma almeno uno tra CountryName, SubCountry_L1/L2
50330-50301
newdata <- data[!is.na(data$TotalVolunteers),] #-2418 dati
location=aggregate(newdata$Location, by=list(zona=newdata$Location), FUN=length)
length(location$zona) #3567, ci sono 3567 location, ma alcune sono NA perchè magari c'è la sigla dello
#stato o il nome del SubCountry
#esattamente length(newdata$Location)-sum(location$x)= 3246 NA
#alcuni hanno NA sia in location che in CountryName che in SubCountry_L1/L2 quindi li tolgo
#per ora lavoro sul newdata per poi capire che fare con quelli senza TotalWidth
newdata <- newdata[!(is.na(newdata$Location)&is.na(newdata$CountryName_FromSource)&is.na(newdata$SubCountry_L1_FromSource)&is.na(newdata$SubCountry_L2_FromSource)),]
#51970 prima - 50330 ora =  1640 con NA nelle quattro colonne
length(na.omit(newdata$Location)) #1606 senza Location ma almeno uno tra CountryName, SubCountry_L1/L2
#o solo 1, o 2, o tutte 3 sotto il codice che riempie tutte le righe con Location NA
for (i in 1:length(newdata$OBJECTID)) {
if(is.na(newdata$Location)[i]==TRUE){
if((is.na(newdata$CountryName_FromSource)[i]==FALSE)&(is.na(newdata$SubCountry_L1_FromSource)[i]==FALSE)&(is.na(newdata$SubCountry_L2_FromSource)[i]==FALSE))
newdata$Location[i]=paste(newdata$SubCountry_L1_FromSource[i],newdata$SubCountry_L2_FromSource[i],newdata$CountryName_FromSource[i], sep = ", ")
if((is.na(newdata$CountryName_FromSource)[i]==FALSE)&(is.na(newdata$SubCountry_L1_FromSource)[i]==FALSE)&(is.na(newdata$SubCountry_L2_FromSource)[i]==TRUE))
newdata$Location[i]=paste(newdata$SubCountry_L1_FromSource[i],newdata$CountryName_FromSource[i], sep = ", ")
if((is.na(newdata$CountryName_FromSource)[i]==FALSE)&(is.na(newdata$SubCountry_L1_FromSource)[i]==TRUE)&(is.na(newdata$SubCountry_L2_FromSource)[i]==FALSE))
newdata$Location[i]=paste(newdata$SubCountry_L2_FromSource[i],newdata$CountryName_FromSource[i], sep = ", ")
if((is.na(newdata$CountryName_FromSource)[i]==TRUE)&(is.na(newdata$SubCountry_L1_FromSource)[i]==FALSE)&(is.na(newdata$SubCountry_L2_FromSource)[i]==FALSE))
newdata$Location[i]=paste(newdata$SubCountry_L1_FromSource[i],newdata$SubCountry_L2_FromSource[i], sep = ", ")
if((is.na(newdata$CountryName_FromSource)[i]==TRUE)&(is.na(newdata$SubCountry_L1_FromSource)[i]==TRUE)&(is.na(newdata$SubCountry_L2_FromSource)[i]==FALSE))
newdata$Location[i]=paste(newdata$SubCountry_L2_FromSource[i])
if((is.na(newdata$CountryName_FromSource)[i]==TRUE)&(is.na(newdata$SubCountry_L1_FromSource)[i]==FALSE)&(is.na(newdata$SubCountry_L2_FromSource)[i]==TRUE))
newdata$Location[i]=paste(newdata$SubCountry_L1_FromSource[i])
if((is.na(newdata$CountryName_FromSource)[i]==FALSE)&(is.na(newdata$SubCountry_L1_FromSource)[i]==TRUE)&(is.na(newdata$SubCountry_L2_FromSource)[i]==TRUE))
newdata$Location[i]=paste(newdata$CountryName_FromSource[i])
}
}
#51970 prima - 50330 ora =  1640 con NA nelle quattro colonne
length(na.omit(newdata$Location)) #1606 senza Location ma almeno uno tra CountryName, SubCountry_L1/L2
library(dplyr)
library(stringr)
str_split(newdata$Location[1], ", ")
str_split(newdata$Location[1], ", ")[3]
x=str_split(newdata$Location[1], ", ")
x=as.vector(str_split(newdata$Location[1], ", "))
x
x[2]
vector(str_split(newdata$Location[1], ", "))
c(str_split(newdata$Location[1], ", "))
x=c(str_split(newdata$Location[1], ", "))
x(3)
x[3]
x[[3]]
x[1]
x[1][3]
x=list(str_split(newdata$Location[1], ", "))
x
x[[3]]
x[3]
x=str_split(newdata$Location[1], ", ")
x[[1]][2]
x[[1]]
x[[1]][4]
# impongo unica classe USA anche per United States, va fatto per tutti i doppioni
data[which(data$CountryName_FromSource == 'United States'), ]$CountryName_FromSource = 'USA'
data[which(data$CountryName_FromSource == 'Italy'), ]$CountryName_FromSource = 'IT'
#calcolo superficie totale, TotalArea_Sq_m sono tutti NA, può essere utile
for (i in 1:length(data$OBJECTID)) {
data$TotalArea_Sq_m[i]=data$TotalWidth_m[i]*data$TotalLength_m[i]
}
newdata <- data[!is.na(data$TotalVolunteers),] #-2418 dati
location=aggregate(newdata$Location, by=list(zona=newdata$Location), FUN=length)
length(location$zona) #3567, ci sono 3567 location, ma alcune sono NA perchè magari c'è la sigla dello
#stato o il nome del SubCountry
#esattamente length(newdata$Location)-sum(location$x)= 3246 NA
#alcuni hanno NA sia in location che in CountryName che in SubCountry_L1/L2 quindi li tolgo
#per ora lavoro sul newdata per poi capire che fare con quelli senza TotalWidth
newdata <- newdata[!(is.na(newdata$Location)&is.na(newdata$CountryName_FromSource)&is.na(newdata$SubCountry_L1_FromSource)&is.na(newdata$SubCountry_L2_FromSource)),]
#51970 prima - 50330 ora =  1640 con NA nelle quattro colonne
length(na.omit(newdata$Location)) #1606 senza Location ma almeno uno tra CountryName, SubCountry_L1/L2
#o solo 1, o 2, o tutte 3 sotto il codice che riempie tutte le righe con Location NA
for (i in 1:length(newdata$OBJECTID)) {
if(is.na(newdata$Location)[i]==TRUE){
if((is.na(newdata$CountryName_FromSource)[i]==FALSE)&(is.na(newdata$SubCountry_L1_FromSource)[i]==FALSE)&(is.na(newdata$SubCountry_L2_FromSource)[i]==FALSE))
newdata$Location[i]=paste(newdata$SubCountry_L1_FromSource[i],newdata$SubCountry_L2_FromSource[i],newdata$CountryName_FromSource[i], sep = ", ")
if((is.na(newdata$CountryName_FromSource)[i]==FALSE)&(is.na(newdata$SubCountry_L1_FromSource)[i]==FALSE)&(is.na(newdata$SubCountry_L2_FromSource)[i]==TRUE))
newdata$Location[i]=paste(newdata$SubCountry_L1_FromSource[i],newdata$CountryName_FromSource[i], sep = ", ")
if((is.na(newdata$CountryName_FromSource)[i]==FALSE)&(is.na(newdata$SubCountry_L1_FromSource)[i]==TRUE)&(is.na(newdata$SubCountry_L2_FromSource)[i]==FALSE))
newdata$Location[i]=paste(newdata$SubCountry_L2_FromSource[i],newdata$CountryName_FromSource[i], sep = ", ")
if((is.na(newdata$CountryName_FromSource)[i]==TRUE)&(is.na(newdata$SubCountry_L1_FromSource)[i]==FALSE)&(is.na(newdata$SubCountry_L2_FromSource)[i]==FALSE))
newdata$Location[i]=paste(newdata$SubCountry_L1_FromSource[i],newdata$SubCountry_L2_FromSource[i], sep = ", ")
if((is.na(newdata$CountryName_FromSource)[i]==TRUE)&(is.na(newdata$SubCountry_L1_FromSource)[i]==TRUE)&(is.na(newdata$SubCountry_L2_FromSource)[i]==FALSE))
newdata$Location[i]=paste(newdata$SubCountry_L2_FromSource[i])
if((is.na(newdata$CountryName_FromSource)[i]==TRUE)&(is.na(newdata$SubCountry_L1_FromSource)[i]==FALSE)&(is.na(newdata$SubCountry_L2_FromSource)[i]==TRUE))
newdata$Location[i]=paste(newdata$SubCountry_L1_FromSource[i])
if((is.na(newdata$CountryName_FromSource)[i]==FALSE)&(is.na(newdata$SubCountry_L1_FromSource)[i]==TRUE)&(is.na(newdata$SubCountry_L2_FromSource)[i]==TRUE))
newdata$Location[i]=paste(newdata$CountryName_FromSource[i])
}
}
x=str_split(newdata$Location[1], ", ")
x
# impongo unica classe USA anche per United States, va fatto per tutti i doppioni
data[which(data$CountryName_FromSource == 'United States'), ]$CountryName_FromSource = 'USA'
data[which(data$CountryName_FromSource == 'Italy'), ]$CountryName_FromSource = 'IT'
View(newdata)
x[[4]]
x[[1]]
x[[1]][5]
View(x)
View(x)
last(x)
last(x[[1]])
location=aggregate(newdata$Location, by=list(zona=newdata$Location), FUN=length)
length(location$zona) #3567, ci sono 3567 location, ma alcune sono NA perchè magari c'è la sigla dello
location=aggregate(newdata$Location, by=list(zona=newdata$Location), FUN=length)
length(location$zona)
3843-3567
length(x)
length(x[[1]])
str_split(newdata$Location[1], ", ")[[4]]
str_split(newdata$Location[1], ", ")[[1]][4]
newdata[which(length(str_split(newdata$Location[1], ", ")[[1]])==1),]
newdata[which(length(str_split(newdata$Location, ", ")[[1]])==1),]
length(x[[1]])
length(newdata$Location[1])
x=newdata[which(length(str_split(newdata$Location, ", ")[[1]])==1),]
View(x)
which(length(str_split(newdata$Location, ", ")[[1]])==1)
str_split(newdata$Location, ", ")
newdata[which(length(str_split(newdata$Location, ", "))[[1]])==2,]
newdata[which(length(str_split(newdata$Location, ", "))[[1]])==1,]
length(str_split(newdata$Location, ", "))[[1]])
length(str_split(newdata$Location[42969], ", ")[[1]])
newdata$Location[42969]
length(str_split(newdata$Location[38959], ", ")[[1]])
which(length(str_split(newdata$Location[38959], ", ")[[1]]))
newdata[which(length(str_split(newdata$Location[38959], ", ")[[1]])==1),]
x=newdata[which(length(str_split(newdata$Location[38959], ", ")[[1]])==1),]
View(x)
View(x)
which(length(str_split(newdata$Location[38959], ", ")[[1]])==1)
length(str_split(newdata$Location[38959], ", ")[[1]])==1
x=newdata[which(length(str_split(newdata$Location, ", ")[[1]])==1),]
length(str_split(newdata$Location, ", ")[[1]])
length(str_split(newdata$Location[], ", ")[[1]])
str_split(newdata$Location[], ", ")[[1]]
str_split(newdata$Location[], ", ")
length(str_split(newdata$Location[], ", "))
length(str_split(newdata$Location[], ", ")[[]])
length(str_split(newdata$Location[], ", ")[[2]])
length(str_split(newdata$Location[], ", ")[[34543]])
x=str_split(newdata$Location[1],", ")
x=as.data.frame(x)
View(x)
as.vector(x)
x=as.vector(x)
x=str_split(newdata$Location[1],", ")
x=vector(x)
x=as.data.frame.array(x)
y=as.data.frame(x)
x=y'
c
c
cg
f
fdg
drrd
d
gfd
v
ccdf
x
x
x
re
er
ee
htrhrh
clc
<
srgd
location=aggregate(newdata$Location, by=list(zona=newdata$Location), FUN=length)
fgh
