which(stati_new1$x==max(stati_new1$x)
cdf
which(stati_new1$x==max(stati_new1$x))
stati_new[1255,]
stati_new1[1255,]
stati_new1[1282,]
stati_new1
1190+252
stati_new1=stati_new[-which(stati$Country=='Philippines'),]
stati_new1[which(stati_new1$x==max(stati_new1$x)),1]
stati_new
stati
1222-6
1216-26
stati_new1
stati_new1=stati_new[-which(stati$Country=='Philippines'),]
which(stati_new1$x==max(stati_new1$x))
stati_new1[1255,]
which(stati$Country=='Philippines')
stati_new[1282,]
stati_new1=stati_new[-c(which(stati$Country=='Philippines')),]
stati_new1[which(stati_new1$x==max(stati_new1$x)),1]
c(which(stati$Country=='Philippines'))
stati_new[209,]
stati_new[237,]
stati_new[1148,]
stati_new[1460,]
stati_new[324,]
stati_new[237,]
-which(stati$Country=='Philippines')
-c(which(stati$Country=='Philippines'))
#nuovo dataset senza Ghana
stati_new=stati[-which(stati$Country=='Ghana'),]
which(stati$Country=='Ghana')
stati[296,]
stati[416,]
stati[710,]
stati[1016,]
stati[1243,]
stati[1400,]
#nuovo dataset senza Ghana
stati_new=stati[-which(stati$Country=='Ghana'),]
stati_new[which(stati_new$x==max(stati_new$x)),1]
stati_new[which(stati$Country=='Ghana'),]
stati_new[which(stati_new$Country=='Ghana'),]
stati_new1=stati_new[-which(stati$Country=='Philippines'),]
stati_new1[which(stati_new1$Country=='Philippines'),]
stati_new1=stati_new[-which(stati$Country=='Philippines'),]
stati_new[which(stati_new$Country=='Ghana'),]
stati_new1[which(stati_new1$Country=='Philippines'),]
stati_new1=stati_new[-which(stati$Country=='Philippines'),]
### PLASTIC POLLUTION ###
library(readr)
library(roahd)
setwd("C:/Users/rozzu/OneDrive/Desktop/NPS-project")
PP_2 <- read_csv("PP_2.csv")
data = PP_2[ , -c(1,2,7,11,23,24,25,28,29,30,37,38,43:83)]
# impongo unica classe USA anche per United States, va fatto per tutti i doppioni
data[which(data$CountryName_FromSource == 'United States'), ]$CountryName_FromSource = 'USA'
data[which(data$CountryName_FromSource == 'Italy'), ]$CountryName_FromSource = 'IT'
#### provo su tutto dataset
stati = aggregate(data$Totalltems_EventRecord, by=list(Country=data$CountryName_FromSource, month=data$MonthNum, year=data$Year), FUN=sum)
nomi_stati = levels(factor(data$CountryName_FromSource))
zeros = rep(0, length(nomi_stati))
stati_fda = data.frame(nomi_stati)
#dataframe stati/mesi
count = 1
for (y in 2015:2018){
for (i in 1:12){
stati_fda = cbind(stati_fda, zeros);
temp = stati[which(stati$month==i & stati$year==y), ]
index = match(temp$Country, stati_fda$nomi_stati)
stati_fda[index, count+1] = temp$x
count = count+1
}
}
names(stati_fda) =  as.character(c('Country', 1:(12*4)))
# palese outlier nel 2018, va trovato
stati[which(stati$x==max(stati$x)),1] #outlier Ghana
Ghana=stati_fda[which(stati_fda$Country=='Ghana'),] #61 riga del Ghana
sum(Ghana==0) #42 su 48, solo 6 valori in 4 anni e uno di questi è il più alto tra tutti i paesi
matplot(t(stati_fda[-61 ,-1]), type='l')
#nuovo dataset senza Ghana
stati_new=stati[-which(stati$Country=='Ghana'),]
stati_new[which(stati_new$x==max(stati_new$x)),1]
Philippines=stati_fda[which(stati_fda$Country=='Philippines'),] #119 riga delle Philippines
sum(Philippines==0) #22 su 48, 26 valori da metà del secondo anno in poi
matplot(t(stati_fda[-c(61,119) ,-1]), type='l')
stati_new1=stati_new[-which(stati$Country=='Philippines'),]
stati_new1[which(stati_new1$x==max(stati_new1$x)),1]
#nuovo dataset senza Ghana
stati_new=stati[-which(stati$Country=='Ghana'),]
stati_new[which(stati$Country=='Ghana'),]
stati_new[(stati$Country=='Ghana'),]
stati_new[which(stati_new$Country=='Ghana'),]
stati_new1=stati_new[-which(stati$Country=='Philippines'),]
stati_new1[which(stati_new1$Country=='Philippines'),]
stati_new1=stati_new[-c(324,384,424,497,544,571,605,638,670,740,811,858,892,920,952,992,1031,1069,1148,1191,1282,1365,1419,1460),]
stati_new1[which(stati_new1$x==max(stati_new1$x)),1]
stati_new[605,]
stati_new1[605,]
stati
stati_new
stati_new1
stati_new
1216-26
stati_new1=stati_new[-c(324,384,424,497,544,571,605,638,670,740,811,858,892,920,952,992,1031,1069,1148,1191,1282,1365,1419,1460),]
stati_new1
stati_new1=stati_new[-which(stati$Country=='Philippines'),]
stati_new1
1922-6-26
stati
1222-6-26
stati_new1
#nuovo dataset senza Ghana
stati_new=stati[-which(stati$Country=='Ghana'),]
which(stati$Country=='Ghana')
stati_new[296]
stati_new[296,]
stati_new[295:298,]
stati_new1=stati_new[-which(stati$Country=='Philippines'),]
stati_new[which(stati_new$x==max(stati_new$x)),1]
which(stati_new$x==max(stati_new$x))
which(stati$Country=='Philippines')
stati_new1=stati_new[-which(stati_new$Country=='Philippines'),]
stati_new1[which(stati_new1$x==max(stati_new1$x)),1]
stati_new1=stati_new[-which(stati_new$Country=='Philippines'),]
stati_new1[which(stati_new1$x==max(stati_new1$x)),1]
which(stati_new$Country=='Philippines')
which(stati_new$x==max(stati_new$x))
stati_new1=stati_new[-which(stati_new$Country=='Philippines'),]
stati_new1[which(stati_new1$x==max(stati_new1$x)),1]
USA=stati_fda[which(stati_fda$Country=='USA'),] #119 riga delle Philippines
which(stati_fda$Country=='USA')
sum(USA==0) #22 su 48, 26 valori da metà del secondo anno in poi
matplot(t(stati_fda[-c(61,119,164) ,-1]), type='l')
max(stati_new1$x)
4722701-1500000
matplot(t(stati_fda[-c(61,119) ,-1]), type='l')
matplot(t(stati_fda[-c(61,119,164) ,-1]), type='l')
matplot(t(stati_fda[-c(61,119) ,-1]), type='l')
matplot(t(stati_fda[-c(61,119,164) ,-1]), type='l')
matplot(t(stati_fda[-c(61,119) ,-1]), type='l')
# plotto andamento USA
USA = stati_fda[which(stati_fda$Country=='USA'), ]
data_fun = fData(1:(12*4), USA[ ,-1])
plot(data_fun)
PP_2$X
PP_2$SubCountry_L1_FromSource
#dataframe stati/mesi
count = 1
for (y in 2016:2018){
for (i in 1:12){
stati_fda = cbind(stati_fda, zeros);
temp = stati[which(stati$month==i & stati$year==y), ]
index = match(temp$Country, stati_fda$nomi_stati)
stati_fda[index, count+1] = temp$x
count = count+1
}
}
for (y in 2016:2018){
for (i in 1:12){
stati_fda = cbind(stati_fda, zeros);
temp = stati[which(stati$month==i & stati$year==y), ]
index = match(temp$Country, stati_fda$nomi_stati)
stati_fda[index, count+1] = temp$x
count = count+1
}
}
#dataframe stati/mesi
count = 1
for (y in 2015:2018){
for (i in 1:12){
stati_fda = cbind(stati_fda, zeros);
temp = stati[which(stati$month==i & stati$year==y), ]
index = match(temp$Country, stati_fda$nomi_stati)
stati_fda[index, count+1] = temp$x
count = count+1
}
}
#### provo su tutto dataset
stati = aggregate(data$Totalltems_EventRecord, by=list(Country=data$CountryName_FromSource, month=data$MonthNum, year=data$Year), FUN=sum)
nomi_stati = levels(factor(data$CountryName_FromSource))
zeros = rep(0, length(nomi_stati))
stati_fda = data.frame(nomi_stati)
#dataframe stati/mesi
count = 1
for (y in 2016:2018){
for (i in 1:12){
stati_fda = cbind(stati_fda, zeros);
temp = stati[which(stati$month==i & stati$year==y), ]
index = match(temp$Country, stati_fda$nomi_stati)
stati_fda[index, count+1] = temp$x
count = count+1
}
}
names(stati_fda) =  as.character(c('Country', 1:(12*4)))
names(stati_fda) =  as.character(c('Country', 1:(12*3)))
# plot functional data
matplot(t(stati_fda[ ,-1]), type='l')
PP_2$Dataset
data = PP_2[ , -c(1,2,7,9,11,23,24,25,28,29,30,37,38,43:83)]
data = PP_2[ , -c(1,2,7,11,23,24,25,28,29,30,37,38,43:83)]
PP_2$LocationFreqID
PP_2$Other
PP_2
data$EventType
PP_2
data = PP_2[ , -c(1,2,7,9,11,23,24,25,28,29,30,37,38,43:83)]
data
data$Day
data
data$StartTime
data
data$Location
data$SubCountry_L1_FromSource
data$SubCountry_L2_FromSource
data$SubCountry_L1_FromSource
data$CountryName_FromSource
data$SubCountry_L1_FromSource
data$SubCountry_L2_FromSource
data$Location
data$Location[1]
index
stati_fda
for (y in 2015:2018){
for (i in 1:12){
stati_fda = cbind(stati_fda, zeros);
temp = stati[which(stati$month==i & stati$year==y), ]
index = match(temp$Country, stati_fda$nomi_stati)
stati_fda[index, count+1] = temp$x
count = count+1
}
}
#dataframe stati/mesi
count = 1
for (y in 2015:2018){
for (i in 1:12){
stati_fda = cbind(stati_fda, zeros);
temp = stati[which(stati$month==i & stati$year==y), ]
index = match(temp$Country, stati_fda$nomi_stati)
stati_fda[index, count+1] = temp$x
count = count+1
}
}
PP_2 <- read_csv("PP_2.csv")
data = PP_2[ , -c(1,2,7,9,11,23,24,25,28,29,30,37,38,43:83)]
# impongo unica classe USA anche per United States, va fatto per tutti i doppioni
data[which(data$CountryName_FromSource == 'United States'), ]$CountryName_FromSource = 'USA'
data[which(data$CountryName_FromSource == 'Italy'), ]$CountryName_FromSource = 'IT'
#### provo su tutto dataset
stati = aggregate(data$Totalltems_EventRecord, by=list(Country=data$CountryName_FromSource, month=data$MonthNum, year=data$Year), FUN=sum)
nomi_stati = levels(factor(data$CountryName_FromSource))
zeros = rep(0, length(nomi_stati))
stati_fda = data.frame(nomi_stati)
#dataframe stati/mesi
count = 1
for (y in 2015:2018){
for (i in 1:12){
stati_fda = cbind(stati_fda, zeros);
temp = stati[which(stati$month==i & stati$year==y), ]
index = match(temp$Country, stati_fda$nomi_stati)
stati_fda[index, count+1] = temp$x
count = count+1
}
}
names(stati_fda) =  as.character(c('Country', 1:(12*4)))
index
stati_fda
names(stati_fda)
stati_fda
stati_fda$Country
nomi_stati
data$CountryName_FromSource)
data$CountryName_FromSource
levels(factor(data$CountryName_FromSource))
data$ShorelineName
data$Location
data$Location[1]
data$DOW
data$TotalClassifiedItems_EC2020
data$PCT_PlasticAndFoam
data.frame(nomi_stati)
pct = aggregate(data$PCT_PlasticAndFoam by=list(Country=data$CountryName_FromSource, month=data$MonthNum, year=data$Year), FUN=sum)
pct = aggregate(data$PCT_PlasticAndFoam, by=list(Country=data$CountryName_FromSource, month=data$MonthNum, year=data$Year), FUN=sum)
pct
data$PCT_PlasticAndFoam
View(Philippines)
View(data)
View(PP_2)
PP_2 <- read_csv("PP_2.csv")
data = PP_2[ , -c(1,2,4,7,9,11,23,24,25,28,29,30,37,38,43:83)]
### PLASTIC POLLUTION ###
library(readr)
library(roahd)
setwd("C:/Users/rozzu/OneDrive/Desktop/NPS-project")
PP_2 <- read_csv("PP_2.csv")
data = PP_2[ , -c(1,2,4,7,9,11,23,24,25,28,29,30,37,38,43:83)]
View(data)
data = PP_2[ , -c(1,2,4,6,7,9,11,23,24,25,28,29,30,37,38,43:83)]
#calcolo superficie, TotalArea_Sq_m sono tutti NA, può essere utile
length(data$OBJECTID)
data$TotalWidth_m[2]
#calcolo superficie, TotalArea_Sq_m sono tutti NA, può essere utile
for (i in 1:length(data$OBJECTID)) {
data$TotalArea_Sq_m[i]=data$TotalWidth_m[i]*data$TotalLength_m[i]
}
View(data)
View(data)
View(data)
View(data)
View(data)
data = PP_2[ , -c(1,2,4,5,6,7,9,11,23,24,25,28,29,30,37,38,43:83)]
# impongo unica classe USA anche per United States, va fatto per tutti i doppioni
data[which(data$CountryName_FromSource == 'United States'), ]$CountryName_FromSource = 'USA'
data[which(data$CountryName_FromSource == 'Italy'), ]$CountryName_FromSource = 'IT'
#calcolo superficie totale, TotalArea_Sq_m sono tutti NA, può essere utile
for (i in 1:length(data$OBJECTID)) {
data$TotalArea_Sq_m[i]=data$TotalWidth_m[i]*data$TotalLength_m[i]
}
plot(data$TotalVolunteers)
max(data$TotalVolunteers)
data$TotalVolunteers
max(data$OBJECTID)
max(data$Totalltems_EventRecord)
#### provo su tutto dataset
stati = aggregate(data$Totalltems_EventRecord, by=list(Country=data$CountryName_FromSource, month=data$MonthNum, year=data$Year), FUN=sum)
nomi_stati = levels(factor(data$CountryName_FromSource)) #cosa sono gli stati "25000,42000,43000 e 92000"?
zeros = rep(0, length(nomi_stati))
stati_fda = data.frame(nomi_stati)
#dataframe stati/mesi
count = 1
for (y in 2015:2018){
for (i in 1:12){
stati_fda = cbind(stati_fda, zeros);
temp = stati[which(stati$month==i & stati$year==y), ]
index = match(temp$Country, stati_fda$nomi_stati)
stati_fda[index, count+1] = temp$x
count = count+1
}
}
names(stati_fda) =  as.character(c('Country', 1:(12*4)))
# palese outlier nel 2018, va trovato
stati[which(stati$x==max(stati$x)),1] #outlier Ghana
max(stati$x)
max(data$TotalClassifiedItems_EC2020)
max(data$Totalltems_EventRecord)
max(stati$x)
max(data$Totalltems_EventRecord)
data$Totalltems_EventRecord
max(data$Totalltems_EventRecord)
max(data$Totalltems_EventRecord)=stati$x
max(stati$x)
max(data$TotalVolunteers)
data = PP_2[ , -c(1,2,4,5,6,7,9,11,23,24,25,28,29,30,35,37,38,43:83)]
data = data[-which(data$TotalVolunteers=='NA') , ]
data
data$TotalVolunteers=='NA'
data$TotalVolunteers
data = PP_2[ , -c(1,2,4,5,6,7,9,11,23,24,25,28,29,30,35,37,38,43:83)]
# impongo unica classe USA anche per United States, va fatto per tutti i doppioni
data[which(data$CountryName_FromSource == 'United States'), ]$CountryName_FromSource = 'USA'
data[which(data$CountryName_FromSource == 'Italy'), ]$CountryName_FromSource = 'IT'
#calcolo superficie totale, TotalArea_Sq_m sono tutti NA, può essere utile
for (i in 1:length(data$OBJECTID)) {
data$TotalArea_Sq_m[i]=data$TotalWidth_m[i]*data$TotalLength_m[i]
}
max(data$TotalVolunteers)
which(data$TotalVolunteers=='NA')
min(data$TotalVolunteers)
mean(data$TotalVolunteers)
is.na(data$TotalVolunteers)
max(data$TotalVolunteers[is.na(data$TotalVolunteers)==FALSE])
newdata <- na.omit(data$TotalVolunteers)
newdata
newdata <- data[na.omit(data$TotalVolunteers),]
length(data$OBJECTID)-length(newdata$OBJECTID)
newdata1 <- newdata[na.omit(data$TotalWidth_m),]
newdata1 <- newdata[na.omit(int(data$TotalWidth_m)),]
na.omit(data$TotalWidth_m)
newdata <- data[na.omit(data$TotalVolunteers),] #-2478 dati
newdata1 <- newdata[na.omit(newdata$TotalWidth_m),]
na.omit(newdata$TotalWidth_m)
na.omit(data$TotalVolunteers)
1418+1000
data = PP_2[ , -c(1,2,4,5,6,7,9,11,23,24,25,28,29,30,35,37,38,43:83)]
# impongo unica classe USA anche per United States, va fatto per tutti i doppioni
data[which(data$CountryName_FromSource == 'United States'), ]$CountryName_FromSource = 'USA'
data[which(data$CountryName_FromSource == 'Italy'), ]$CountryName_FromSource = 'IT'
#calcolo superficie totale, TotalArea_Sq_m sono tutti NA, può essere utile
for (i in 1:length(data$OBJECTID)) {
data$TotalArea_Sq_m[i]=data$TotalWidth_m[i]*data$TotalLength_m[i]
}
newdata <- data[na.omit(data$TotalVolunteers),] #-2478 dati
na.omit(data$TotalVolunteers)
j
gg
na.omit(data$TotalVolunteers)
length(na.omit(data$TotalVolunteers))
na.omit(data$TotalVolunteers)
length(na.omit(data$TotalVolunteers))
1418+1000
2418+60
na.omit(newdata$TotalWidth_m)
length(na.omit(newdata$TotalWidth_m))
51821+89
newdata1 <- newdata[na.omit(newdata$TotalWidth_m),]
na.omit(newdata$TotalWidth_m)
na.omit(data$TotalVolunteers)
54388-1518
length(na.omit(data$TotalVolunteers))
?na.omit
na.omit(newdata$TotalWidth_m)
length(as.numeric(na.omit(newdata$TotalWidth_m)))
length(na.omit(newdata$TotalWidth_m))
51821+89
### PLASTIC POLLUTION ###
library(readr)
library(roahd)
setwd("C:/Users/rozzu/OneDrive/Desktop/NPS-project")
PP_2 <- read_csv("PP_2.csv")
data = PP_2[ , -c(1,2,4,5,6,7,9,11,23,24,25,28,29,30,35,37,38,43:83)]
# impongo unica classe USA anche per United States, va fatto per tutti i doppioni
data[which(data$CountryName_FromSource == 'United States'), ]$CountryName_FromSource = 'USA'
data[which(data$CountryName_FromSource == 'Italy'), ]$CountryName_FromSource = 'IT'
#calcolo superficie totale, TotalArea_Sq_m sono tutti NA, può essere utile
for (i in 1:length(data$OBJECTID)) {
data$TotalArea_Sq_m[i]=data$TotalWidth_m[i]*data$TotalLength_m[i]
}
newdata <- data[na.omit(data$TotalVolunteers),] #-2478 dati
newdata1 <- newdata[na.omit(newdata$TotalWidth_m),]
length(na.omit(data$TotalVolunteers))
View(newdata)
max(newdata)
max(newdata$TotalVolunteers)
newdata <- data[na.omit(data$TotalVolunteers),] #-2478 dati
max(newdata$TotalVolunteers)
na.omit(data$TotalVolunteers)
data = PP_2[ , -c(1,2,4,5,6,7,9,11,23,24,25,28,29,30,35,37,38,43:83)]
newdata <- data[na.omit(data$TotalVolunteers),] #-2478 dati
max(newdata$TotalVolunteers)
na.omit(data$TotalVolunteers)
as.numeric(na.omit(data$TotalVolunteers))
50970+1000
newdata <- data[!na.omit(data$TotalVolunteers),] #-2478 dati
newdata <- data[!is.na(data$TotalVolunteers),] #-2478 dati
is.na(data$TotalVolunteers)
max(newdata$TotalVolunteers)
newdata1 <- newdata[!is.na(newdata$TotalWidth_m),]
length(!is.na(newdata$TotalWidth_m))
!is.na(newdata$TotalWidth_m)
length(!is.na(newdata$TotalWidth_m))
View(newdata)
max(newdata$TotalWidth_m)
newdata1 <- newdata[!is.na(newdata$TotalWidth_m),]
View(newdata1)
newdata1 <- newdata[na.omit(newdata$TotalWidth_m),]
na.omit(newdata$TotalWidth_m)
newdata["3116",]
View(newdata)
newdata <- data[!is.na(data$TotalVolunteers),] #-2478 dati
length(na.omit(newdata$TotalVolunteers))
newdata1 <- newdata[na.omit(newdata$TotalWidth_m),]
newdata1 <- newdata[is.na(newdata$TotalWidth_m),]
data = PP_2[ , -c(1,2,4,5,6,7,9,11,23,24,25,28,29,30,35,37,38,43:83)]
# impongo unica classe USA anche per United States, va fatto per tutti i doppioni
data[which(data$CountryName_FromSource == 'United States'), ]$CountryName_FromSource = 'USA'
data[which(data$CountryName_FromSource == 'Italy'), ]$CountryName_FromSource = 'IT'
#calcolo superficie totale, TotalArea_Sq_m sono tutti NA, può essere utile
for (i in 1:length(data$OBJECTID)) {
data$TotalArea_Sq_m[i]=data$TotalWidth_m[i]*data$TotalLength_m[i]
}
newdata <- data[!is.na(data$TotalVolunteers),] #-2478 dati
newdata1 <- newdata[is.na(newdata$TotalWidth_m),]
length(newdata1$OBJECTID)
length(newdata$OBJECTID)-length(newdata1$OBJECTID)
length(data$OBJECTID)-length(newdata$OBJECTID)
View(newdata1)
newdata1 <- newdata[!is.na(newdata$TotalWidth_m),] #-2121 dati
newdata1 <- newdata[is.na(newdata$TotalWidth_m),] #-2121 dati
newdata1 <- newdata[!is.na(newdata$TotalWidth_m),] #-49894 dati!!
#### provo su tutto dataset
stati = aggregate(newdata1$Totalltems_EventRecord, by=list(Country=newdata1$CountryName_FromSource, month=newdata1$MonthNum, year=newdata1$Year), FUN=sum)
nomi_stati = levels(factor(newdata1$CountryName_FromSource)) #cosa sono gli stati "25000,42000,43000 e 92000"?
zeros = rep(0, length(nomi_stati))
stati_fda = data.frame(nomi_stati)
#dataframe stati/mesi
count = 1
for (y in 2015:2018){
for (i in 1:12){
stati_fda = cbind(stati_fda, zeros);
temp = stati[which(stati$month==i & stati$year==y), ]
index = match(temp$Country, stati_fda$nomi_stati)
stati_fda[index, count+1] = temp$x
count = count+1
}
}
names(stati_fda) =  as.character(c('Country', 1:(12*4)))
# plot functional data
matplot(t(stati_fda[ ,-1]), type='l')
data = PP_2[ , -c(1,2,4,5,6,7,9,11,23,24,25,28,29,30,35,37,38,43:83)]
# impongo unica classe USA anche per United States, va fatto per tutti i doppioni
data[which(data$CountryName_FromSource == 'United States'), ]$CountryName_FromSource = 'USA'
data[which(data$CountryName_FromSource == 'Italy'), ]$CountryName_FromSource = 'IT'
#calcolo superficie totale, TotalArea_Sq_m sono tutti NA, può essere utile
for (i in 1:length(data$OBJECTID)) {
data$TotalArea_Sq_m[i]=data$TotalWidth_m[i]*data$TotalLength_m[i]
}
newdata <- data[!is.na(data$TotalVolunteers),] #-2418 dati
newdata1 <- newdata[!is.na(newdata$TotalWidth_m),] #-49894 dati!! contiene solo 2121 dati
# prova dataset 2015 stati/mesi
dati_2015 = data[which(data$Year=="2015"), ]
